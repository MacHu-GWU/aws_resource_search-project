# -*- coding: utf-8 -*-

import typing as T
import dataclasses

from .ars_base import ARSBase
from .compat import cached_property

if T.TYPE_CHECKING:  # pragma: no cover
    from .resource_searcher import ResourceSearcher


@dataclasses.dataclass
class ARS(ARSBase):  # pragma: no cover
    {%- for service_id, resource_type in service_id_resource_type_pairs %}
    @cached_property
    def {{ service_id }}_{{ resource_type }}(self) -> "ResourceSearcher":
        return self._get_rs(service_id="{{ service_id }}", resource_type="{{ resource_type }}")
    {% endfor %}
