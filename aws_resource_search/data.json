{
    "cloudformation": {
        "_shared": {
            "*.url.service_id": "cloudformation"
        },
        "cloudformation-stack": {
            "req": {
                "method": "describe_stacks",
                "kwargs": {
                    "PaginationConfig": {
                        "MaxItems": 9999
                    }
                },
                "is_paginator": true,
                "result_path": "$Stacks || `[]`"
            },
            "out": {
                "arn": {
                    "type": "str",
                    "token": "$_res.StackId"
                },
                "title": {
                    "type": "str",
                    "token": "$_res.StackName"
                },
                "subtitle": {
                    "type": "str",
                    "token": "$_res.StackStatus"
                }
            },
            "doc": {
                "id": {
                    "type": "Id",
                    "token": "$_res.StackId",
                    "kwargs": {
                        "stored": true,
                        "field_boost": 10
                    }
                },
                "name": {
                    "type": "NgramWords",
                    "token": "$_res.StackName",
                    "kwargs": {
                        "stored": true
                    }
                }
            },
            "url": {
                "method": "get_stack",
                "kwargs": {
                    "name_or_arn": "$raw_data._res.StackId"
                }
            }
        }
    },
    "dynamodb": {
        "_shared": {
            "*.url.service_id": "dynamodb"
        },
        "dynamodb-table": {
            "req": {
                "method": "list_tables",
                "kwargs": {
                    "PaginationConfig": {
                        "MaxItems": 9999,
                        "PageSize": 1000
                    }
                },
                "is_paginator": true,
                "result_path": "$TableNames || `[]`"
            },
            "out": {
                "arn": {
                    "type": "str",
                    "token": {
                        "type": "sub",
                        "kwargs": {
                            "template": "arn:aws:dynamodb:{aws_region}:{aws_account_id}:table/{table}",
                            "params": {
                                "table": "$_res",
                                "aws_region": "$_ctx.AWS_REGION",
                                "aws_account_id": "$_ctx.AWS_ACCOUNT_ID"
                            }
                        }
                    }
                },
                "title": {
                    "type": "str",
                    "token": "$_res"
                },
                "subtitle": {
                    "type": "str",
                    "token": ""
                }
            },
            "doc": {
                "id": {
                    "type": "Id",
                    "token": "$_res",
                    "kwargs": {
                        "stored": true,
                        "field_boost": 10
                    }
                },
                "name": {
                    "type": "NgramWords",
                    "token": "$_res",
                    "kwargs": {
                        "stored": true
                    }
                }
            },
            "url": {
                "method": "get_table",
                "kwargs": {
                    "table_or_arn": "$raw_data._res"
                }
            }
        }
    },
    "ec2": {
        "_shared": {
            "*.url.service_id": "ec2"
        },
        "ec2-instance": {
            "req": {
                "method": "describe_instances",
                "kwargs": {
                    "PaginationConfig": {
                        "MaxItems": 9999,
                        "PageSize": 1000
                    }
                },
                "is_paginator": true,
                "result_path": "$Reservations[].Instances[] || `[]`"
            },
            "out": {
                "arn": {
                    "type": "str",
                    "token": {
                        "type": "sub",
                        "kwargs": {
                            "template": "arn:aws:ec2:{aws_region}:{aws_account_id}:instance/{instance_id}",
                            "params": {
                                "instance_id": "$_res.InstanceId",
                                "aws_region": "$_ctx.AWS_REGION",
                                "aws_account_id": "$_ctx.AWS_ACCOUNT_ID"
                            }
                        }
                    }
                },
                "title": {
                    "type": "str",
                    "token": "$_res.Tags[?Key=='Name'].Value | [0] || 'No instance name'"
                },
                "subtitle": {
                    "type": "str",
                    "token": {
                        "type": "sub",
                        "kwargs": {
                            "template": "{state} | {inst_id} | {inst_type}",
                            "params": {
                                "state": "$_res.State.Name",
                                "inst_id": "$_res.InstanceId",
                                "inst_type": "$_res.InstanceType"
                            }
                        }
                    }
                }
            },
            "doc": {
                "id": {
                    "type": "Id",
                    "token": "$_res.InstanceId",
                    "kwargs": {
                        "stored": true,
                        "field_boost": 10
                    }
                },
                "inst_id": {
                    "type": "Ngram",
                    "token": "$_res.InstanceId",
                    "kwargs": {
                        "stored": true
                    }
                },
                "name": {
                    "type": "NgramWords",
                    "token": "$_res.Tags[?Key=='Name'].Value | [0] || 'No instance name'",
                    "kwargs": {
                        "stored": true
                    }
                }
            },
            "url": {
                "method": "get_instance",
                "kwargs": {
                    "instance_id_or_arn": "$raw_data._res.InstanceId"
                }
            }
        }
    }
}